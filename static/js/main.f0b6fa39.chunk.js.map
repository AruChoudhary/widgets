{"version":3,"sources":["components/Accordion.js","components/Search.js","components/Dropdown.js","components/Convert.js","components/Translate.js","components/Route.js","components/Link.js","components/Header.js","App.js","index.js"],"names":["Accordion","items","useState","activeIndex","setActiveIndex","renderedItems","map","item","index","active","Fragment","className","onClick","onTitleCLick","title","content","Search","term","setTerm","debouncedTerm","setDebouncedTerm","results","setResults","console","log","useEffect","timerId","setTimeout","clearTimeout","a","axios","get","params","action","list","origin","format","srsearch","data","query","search","renderedResults","result","href","pageid","dangerouslySetInnerHTML","__html","snippet","value","onChange","e","target","Dropdown","label","options","selected","onSelectedChange","open","setOpen","ref","useRef","onBodyClick","event","current","contains","document","body","addEventListener","capture","removeEventListener","renderedOptions","option","Convert","language","text","translated","setTranslated","debouncedText","setDebouncedText","post","q","key","translations","translatedText","doTranslation","Translate","setLanguage","setText","Route","path","children","window","location","pathname","currentPath","setCurrentPath","onLocationChange","Link","metaKey","ctrlKey","preventDefault","history","pushState","navEvent","PopStateEvent","dispatchEvent","Header","setSelected","ReactDOM","render","App","querySelector"],"mappings":"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","file":"static/js/main.f0b6fa39.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n//{useState} is a hook that gives us access to state inside the function component.\r\n\r\n\r\n\r\nconst Accordion = ({items}) => {\r\n\r\n    //Array destructuring i.e., we want access of first element of useState and assign it to activeIndex and second to setActiveIndex.\r\n    //activeIndex is a piece of state we are trying to keep track of, some value that is going to change over time\r\n    //setActiveIndex is a function we call to update our piece of state. Anytime we call this setter function, it will cause our entire state to automatically rerender.\r\n    //when we call useState() it takes one argument that will be our default value for piece of state.\r\n    //activeIndex and setActiveIndex are not special variable name, we can cll them whatever we want\r\n    const [activeIndex, setActiveIndex] = useState(null);\r\n\r\n    const onTitleCLick = (index) => {\r\n        //Updating the value of state\r\n        setActiveIndex(index);\r\n        //console.log('Title Clicked', index);\r\n    };\r\n\r\n    //rendering items out as a list using a mapping function. And for each item we are going to return a little bit of jsx\r\n    //Every element inside the list of jsx element has to have a key property.\r\n    //So we'll use item as key property as it is unique.\r\n    //While returning, the first <div> creates an extra element. To avoid that we use React.Fragment\r\n    //We wrapped onClick into an arrow function as we want to call it at some point in future.\r\n    //If we write like onClick={onTitleClick(index)}, it will be invoked all 3 times i.e., the instant the component is rendered\r\n    const renderedItems = items.map((item, index) => {\r\n\r\n        const active = index === activeIndex ? 'active' : '';\r\n\r\n        return <React.Fragment key={item.title}>\r\n            <div \r\n                className={`title ${active}`}\r\n                onClick={()=>onTitleCLick(index)}\r\n            >\r\n                <i className=\"dropdown icon\"></i>\r\n                {item.title}\r\n            </div>\r\n            <div className={`content ${active}`}>\r\n                <p>{item.content}</p>\r\n            </div>\r\n        </React.Fragment>    \r\n    });\r\n\r\n    return (\r\n        <div className = \"ui styled accordion\">\r\n            {renderedItems}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Accordion;","import React, {useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Search = () => {\r\n\r\n    const [term, setTerm] = useState('programming');\r\n    const [debouncedTerm, setDebouncedTerm] = useState(term);\r\n    const [results, setResults] = useState([]);\r\n\r\n    console.log(results);\r\n\r\n    useEffect(()=>{\r\n        const timerId = setTimeout(()=>{\r\n            setDebouncedTerm(term);\r\n        },1000);\r\n\r\n        return ()=>{\r\n            clearTimeout(timerId);\r\n        };\r\n    });\r\n    //console.log('I RUN WITH EVERY RENDER'); //Rerendering the component with every single key press!\r\n\r\n    //first argument of useEffect is always going to be a function.\r\n    //second argument controls when our function is executed.--> Empty array OR array with values inside it OR no array at all!\r\n\r\n    //it will run ONCE right after component is rerendered.\r\n    // useEffect(()=>{\r\n    //     console.log('I ONLY RUN ONCE');\r\n    // }, []);\r\n\r\n    // useEffect(()=>{\r\n    //     console.log('I RUN AFTER EVERY RENDER AND AT INITIAL RENDER!');\r\n    // });\r\n\r\n    //this will run at start as well as any time the term has change, i.e., every time term changes.\r\n    //Therefore this here will have same effect as no second argument\r\n    //if there are two useStates, the second argument can have two elements inside it as well and will run when either of the element changes\r\n    // useEffect(()=>{\r\n    //     console.log('I RUN AFTER EVERY TIME TERM CHANGES AND AT INITIAL RENDER!');\r\n    // },[term]);\r\n\r\n    useEffect(()=>{\r\n        const search = async() =>{\r\n            const {data} = await axios.get('https://en.wikipedia.org/w/api.php', {\r\n                params: {\r\n                    action: 'query',\r\n                    list: 'search',\r\n                    origin: '*',\r\n                    format: 'json',\r\n                    srsearch: debouncedTerm\r\n                }\r\n            });\r\n            setResults(data.query.search);\r\n        };\r\n        search();\r\n    }, [debouncedTerm]);\r\n\r\n    //we want to search every single time user presses a key\r\n    //we cannot mark our function as async and use await in useEffect(). See lecture 158\r\n    //we can make temporary function inside it for the same\r\n    // useEffect(()=>{\r\n        \r\n\r\n    //     //first time render\r\n    //     if(term && !results.length){\r\n    //         search();\r\n    //     } else {\r\n    //         //timer of 500ms i.e., it will be lagged by 1000ms\r\n    //         //Now any time the input is changed, we have to reset the timer\r\n    //         //whenever we use setTimeout(), we get an identifier. So we can clear this timeout by using this identifier!\r\n    //         const timeoutId = setTimeout(() => {\r\n    //             if(term){\r\n    //                 search();\r\n    //             } \r\n    //         }, 1000);  \r\n        \r\n    //         //We can only return a function from useEffect()\r\n    //         return () => {\r\n    //             clearTimeout(timeoutId);\r\n    //         };\r\n    //     }\r\n    // },[term, results.length]);\r\n\r\n\r\n    \r\n    //----OR--------\r\n\r\n    // useEffect(()=>{\r\n    //     (async() =>{\r\n    //         await axios.get('asbxma');\r\n    //     })();\r\n    // },[term]);\r\n\r\n    //---------OR--------\r\n\r\n    //use of promises - least often used\r\n    // useEffect(()=>{\r\n    //     axios.get('asamhb').then((response) => {\r\n    //         console.log(response.data);\r\n    //     });\r\n    // },[term]);\r\n\r\n    const renderedResults = results.map((result)=>{\r\n        return (\r\n            <div key = {result.pageid} className = \"item\">\r\n                <div className=\"right floated content\">\r\n                    <a \r\n                        className=\"ui button\"\r\n                        href = {`https://en.wikipedia.org?curid=${result.pageid}`}\r\n                    >\r\n                        Go\r\n                    </a>\r\n                </div>\r\n                <div className = \"content\">\r\n                    <div className = \"header\">\r\n                        {result.title}\r\n                    </div>\r\n                    <span dangerouslySetInnerHTML={{__html:result.snippet}}></span>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"ui form\">\r\n                <div className = \"field\">\r\n                    <br />\r\n                    <label>Enter Search Term</label>\r\n                    <input \r\n                        value = {term}\r\n                        onChange = {(e)=>setTerm(e.target.value)}\r\n                        className = \"input\" \r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className = \"ui celled list\">\r\n                {renderedResults}\r\n            </div>\r\n        </div>    \r\n    );\r\n};\r\n\r\nexport default Search;","import React, {useState, useEffect, useRef} from 'react';\r\n\r\nconst Dropdown = ({ label, options, selected, onSelectedChange }) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const ref = useRef();\r\n\r\n    useEffect(()=>{\r\n        //body event listener will always be to first one to get invoked.\r\n            //ref.current will give reference to that div of ui form\r\n            //it checks whether the element that is clicked on is inside our ref component, if yes then return otherwise close the dropdown\r\n            //if the element is removed from DOM, ref.current will be null\r\n\r\n        const onBodyClick = (event)=>{\r\n            if (ref.current && ref.current.contains(event.target)) {\r\n                return;\r\n            }\r\n            setOpen(false);\r\n        };\r\n        document.body.addEventListener('click', onBodyClick , { capture: true });\r\n\r\n        //when dropdown component is removed entirely, cleanup function is called, (also called before rendered for the next time).\r\n        //whenever our component is removed in dom, we remove this onBodyClick callback entirely\r\n        return () => {\r\n            document.body.removeEventListener('click', onBodyClick , { capture: true });\r\n        }\r\n\r\n    }, []); //we want it to be rendered once.\r\n\r\n    const renderedOptions = options.map((option)=>{\r\n\r\n        if(option.value===selected.value){\r\n            return null;\r\n        }\r\n        return (\r\n            <div \r\n                key = {option.value} \r\n                className=\"item\"\r\n                onClick={()=>onSelectedChange(option)}\r\n            >\r\n                {option.label}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div ref ={ref} className=\"ui form\">\r\n            <div className=\"field\">\r\n                <label className=\"label\">\r\n                    {label}\r\n                </label>\r\n                <div \r\n                    onClick={()=>setOpen(!open)} \r\n                    className={`ui selection dropdown ${open ? 'visible active' : ''}`}\r\n                >\r\n                    <i className=\"dropdown icon\"></i>\r\n                    <div className=\"text\">{selected.label}</div>\r\n                    <div className={`menu ${open ? 'visible transition' : ''}`}>\r\n                        {renderedOptions}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dropdown;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Convert = ({language, text}) => {\r\n    const [translated, setTranslated] = useState('');\r\n    const [debouncedText, setDebouncedText] = useState(text);\r\n\r\n    useEffect(()=>{\r\n        const timerId = setTimeout(()=>{\r\n            setDebouncedText(text);\r\n        }, 500);\r\n\r\n        return () =>{\r\n            clearTimeout(timerId);\r\n        };\r\n    }, [text]);\r\n\r\n    useEffect(()=>{\r\n\r\n        const doTranslation = async() => {\r\n            const {data} = await axios.post('https://translation.googleapis.com/language/translate/v2', {}, {\r\n                params : {\r\n                    q: debouncedText,\r\n                    target: language.value,\r\n                    key: 'AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM'\r\n                },\r\n            });\r\n            setTranslated(data.data.translations[0].translatedText);\r\n        };   \r\n        \r\n        doTranslation();\r\n\r\n    }, [language, debouncedText]);\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"ui header\">{translated}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Convert;\r\n","import React, {useState} from 'react';\r\nimport Dropdown from './Dropdown';\r\nimport Convert from './Convert';\r\n\r\nconst options = [\r\n    {\r\n        label : 'Afrikans',\r\n        value : 'af'\r\n    },\r\n    {\r\n        label : 'Arabic',\r\n        value : 'ar'\r\n    },\r\n    {\r\n        label : 'Hindi',\r\n        value : 'hi'\r\n    }\r\n]\r\n\r\nconst Translate = () => {\r\n\r\n    const [language, setLanguage] = useState(options[0]);\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"ui form\">\r\n                <div className = \"field\">\r\n                    <label>Enter Text</label>\r\n                    <input value={text} onChange={(e)=>setText(e.target.value)} />\r\n                </div>\r\n            </div>\r\n            <Dropdown \r\n                label = 'Select a language'\r\n                selected = {language} \r\n                onSelectedChange = {setLanguage} \r\n                options = {options} \r\n            />\r\n            <hr />\r\n            <h3 className = \"ui header\">Output:</h3>\r\n            <Convert text={text} language={language} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Translate;","//We only need to import react when we write jsx.\r\n//import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\n\r\nconst Route = ({path, children}) => {\r\n\r\n    const [currentPath, setCurrentPath] = useState(window.location.pathname);\r\n\r\n    useEffect(()=>{\r\n        const onLocationChange = () => {\r\n            setCurrentPath(window.location.pathname);\r\n        };\r\n        window.addEventListener('popstate', onLocationChange);\r\n\r\n        return ()=>{\r\n            window.removeEventListener('popstate', onLocationChange);\r\n        };\r\n    }, []);\r\n\r\n    return currentPath === path\r\n    ? children\r\n    : null;\r\n};\r\n\r\nexport default Route;","import React from 'react';\r\n\r\nconst Link = ({className, href, children}) => {\r\n\r\n    const onClick = (event) => {\r\n        if(event.metaKey || event.ctrlKey){\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        window.history.pushState({}, '', href);\r\n\r\n        const navEvent = new PopStateEvent('popstate');\r\n        window.dispatchEvent(navEvent);\r\n    };\r\n\r\n    return (\r\n        <a onClick={onClick} className={className} href={href} >\r\n            {children}\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Link;\r\n","import React from 'react';\r\nimport Accordion from './Accordion';\r\nimport Link from './Link';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"ui secondary pointing menu\">\r\n            <Link href=\"/\" className=\"item\">\r\n                Accordion\r\n            </Link>\r\n            <Link href=\"/list\" className=\"item\">\r\n                Search\r\n            </Link>\r\n            <Link href=\"/dropdown\" className=\"item\">\r\n                Dropdown\r\n            </Link>\r\n            <Link href=\"/translate\" className=\"item\">\r\n                Translate\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport Accordion from './components/Accordion';\r\nimport Search from './components/Search';\r\nimport Dropdown from './components/Dropdown';\r\nimport Translate from './components/Translate';\r\nimport Route from './components/Route';\r\nimport Header from './components/Header';\r\n\r\nconst items = [\r\n    {\r\n        title : 'What is React?',\r\n        content : 'React is a frontend javascript framework.'\r\n    },\r\n    {\r\n        title : 'Why use React?',\r\n        content : 'React is a favorite js library among engineers.'\r\n    },\r\n    {\r\n        title : 'How do you use React?',\r\n        content : 'We use react by creating components.'\r\n    }\r\n];\r\n\r\nconst options = [\r\n    {\r\n        label : 'The Color Red',\r\n        value : 'red'\r\n    },\r\n    {\r\n        label : 'The Color Green',\r\n        value : 'green'\r\n    },\r\n    {\r\n        label : 'A shade of blue',\r\n        value : 'blue'\r\n    }\r\n];\r\n\r\n// const showAccordion = () => {\r\n//     if(window.location.pathname === '/'){\r\n//         return <Accordion items={items} />;\r\n//     }\r\n// };\r\n\r\n// const showList = () => {\r\n//     if(window.location.pathname === '/list'){\r\n//         return <Search />;\r\n//     } \r\n// };\r\n\r\n// const showDropdown = () => {\r\n//     if(window.location.pathname === '/dropdown'){\r\n//         return <Dropdown />;\r\n//     }\r\n// };\r\n\r\n// const showTranslate = () => {\r\n//     if(window.location.pathname === '/translate'){\r\n//         return <Translate />;\r\n//     }\r\n// }\r\n\r\nexport default () => {\r\n    const [selected, setSelected] = useState(options[0]);\r\n    \r\n    //when you return one jsx component inside other jsx component, \r\n    //the inner element is provided to the outer one by the prop called children.\r\n    return (\r\n        <div>\r\n            <h1>My Widgets</h1>\r\n            <Header />\r\n            <Route path = \"/\">\r\n                <Accordion items={items} />\r\n            </Route>\r\n            <Route path = \"/list\">\r\n                <Search />\r\n            </Route>\r\n            <Route path = \"/dropdown\">\r\n                <Dropdown \r\n                    label = \"Select a color\"\r\n                    options={options}\r\n                    selected={selected}\r\n                    onSelectedChange={setSelected}\r\n                />\r\n            </Route>\r\n            <Route path = \"/translate\">\r\n                <Translate />\r\n            </Route>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}